// megafunction wizard: %LPM_MUX%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: lpm_mux 

// ============================================================
// File Name: lpm_mux0.v
// Megafunction Name(s):
// 			lpm_mux
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 9.1 Build 222 10/21/2009 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2009 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//lpm_mux DEVICE_FAMILY="Stratix II" LPM_SIZE=16 LPM_WIDTH=8 LPM_WIDTHS=4 data result sel
//VERSION_BEGIN 9.1 cbx_lpm_mux 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463


//synthesis_resources = lut 40 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  lpm_mux0_mux
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [127:0]  data;
	output   [7:0]  result;
	input   [3:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [127:0]  data;
	tri0   [3:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	wire_l1_w0_n0_mux_dataout;
	wire	wire_l1_w0_n1_mux_dataout;
	wire	wire_l1_w0_n2_mux_dataout;
	wire	wire_l1_w0_n3_mux_dataout;
	wire	wire_l1_w0_n4_mux_dataout;
	wire	wire_l1_w0_n5_mux_dataout;
	wire	wire_l1_w0_n6_mux_dataout;
	wire	wire_l1_w0_n7_mux_dataout;
	wire	wire_l1_w1_n0_mux_dataout;
	wire	wire_l1_w1_n1_mux_dataout;
	wire	wire_l1_w1_n2_mux_dataout;
	wire	wire_l1_w1_n3_mux_dataout;
	wire	wire_l1_w1_n4_mux_dataout;
	wire	wire_l1_w1_n5_mux_dataout;
	wire	wire_l1_w1_n6_mux_dataout;
	wire	wire_l1_w1_n7_mux_dataout;
	wire	wire_l1_w2_n0_mux_dataout;
	wire	wire_l1_w2_n1_mux_dataout;
	wire	wire_l1_w2_n2_mux_dataout;
	wire	wire_l1_w2_n3_mux_dataout;
	wire	wire_l1_w2_n4_mux_dataout;
	wire	wire_l1_w2_n5_mux_dataout;
	wire	wire_l1_w2_n6_mux_dataout;
	wire	wire_l1_w2_n7_mux_dataout;
	wire	wire_l1_w3_n0_mux_dataout;
	wire	wire_l1_w3_n1_mux_dataout;
	wire	wire_l1_w3_n2_mux_dataout;
	wire	wire_l1_w3_n3_mux_dataout;
	wire	wire_l1_w3_n4_mux_dataout;
	wire	wire_l1_w3_n5_mux_dataout;
	wire	wire_l1_w3_n6_mux_dataout;
	wire	wire_l1_w3_n7_mux_dataout;
	wire	wire_l1_w4_n0_mux_dataout;
	wire	wire_l1_w4_n1_mux_dataout;
	wire	wire_l1_w4_n2_mux_dataout;
	wire	wire_l1_w4_n3_mux_dataout;
	wire	wire_l1_w4_n4_mux_dataout;
	wire	wire_l1_w4_n5_mux_dataout;
	wire	wire_l1_w4_n6_mux_dataout;
	wire	wire_l1_w4_n7_mux_dataout;
	wire	wire_l1_w5_n0_mux_dataout;
	wire	wire_l1_w5_n1_mux_dataout;
	wire	wire_l1_w5_n2_mux_dataout;
	wire	wire_l1_w5_n3_mux_dataout;
	wire	wire_l1_w5_n4_mux_dataout;
	wire	wire_l1_w5_n5_mux_dataout;
	wire	wire_l1_w5_n6_mux_dataout;
	wire	wire_l1_w5_n7_mux_dataout;
	wire	wire_l1_w6_n0_mux_dataout;
	wire	wire_l1_w6_n1_mux_dataout;
	wire	wire_l1_w6_n2_mux_dataout;
	wire	wire_l1_w6_n3_mux_dataout;
	wire	wire_l1_w6_n4_mux_dataout;
	wire	wire_l1_w6_n5_mux_dataout;
	wire	wire_l1_w6_n6_mux_dataout;
	wire	wire_l1_w6_n7_mux_dataout;
	wire	wire_l1_w7_n0_mux_dataout;
	wire	wire_l1_w7_n1_mux_dataout;
	wire	wire_l1_w7_n2_mux_dataout;
	wire	wire_l1_w7_n3_mux_dataout;
	wire	wire_l1_w7_n4_mux_dataout;
	wire	wire_l1_w7_n5_mux_dataout;
	wire	wire_l1_w7_n6_mux_dataout;
	wire	wire_l1_w7_n7_mux_dataout;
	wire	wire_l2_w0_n0_mux_dataout;
	wire	wire_l2_w0_n1_mux_dataout;
	wire	wire_l2_w0_n2_mux_dataout;
	wire	wire_l2_w0_n3_mux_dataout;
	wire	wire_l2_w1_n0_mux_dataout;
	wire	wire_l2_w1_n1_mux_dataout;
	wire	wire_l2_w1_n2_mux_dataout;
	wire	wire_l2_w1_n3_mux_dataout;
	wire	wire_l2_w2_n0_mux_dataout;
	wire	wire_l2_w2_n1_mux_dataout;
	wire	wire_l2_w2_n2_mux_dataout;
	wire	wire_l2_w2_n3_mux_dataout;
	wire	wire_l2_w3_n0_mux_dataout;
	wire	wire_l2_w3_n1_mux_dataout;
	wire	wire_l2_w3_n2_mux_dataout;
	wire	wire_l2_w3_n3_mux_dataout;
	wire	wire_l2_w4_n0_mux_dataout;
	wire	wire_l2_w4_n1_mux_dataout;
	wire	wire_l2_w4_n2_mux_dataout;
	wire	wire_l2_w4_n3_mux_dataout;
	wire	wire_l2_w5_n0_mux_dataout;
	wire	wire_l2_w5_n1_mux_dataout;
	wire	wire_l2_w5_n2_mux_dataout;
	wire	wire_l2_w5_n3_mux_dataout;
	wire	wire_l2_w6_n0_mux_dataout;
	wire	wire_l2_w6_n1_mux_dataout;
	wire	wire_l2_w6_n2_mux_dataout;
	wire	wire_l2_w6_n3_mux_dataout;
	wire	wire_l2_w7_n0_mux_dataout;
	wire	wire_l2_w7_n1_mux_dataout;
	wire	wire_l2_w7_n2_mux_dataout;
	wire	wire_l2_w7_n3_mux_dataout;
	wire	wire_l3_w0_n0_mux_dataout;
	wire	wire_l3_w0_n1_mux_dataout;
	wire	wire_l3_w1_n0_mux_dataout;
	wire	wire_l3_w1_n1_mux_dataout;
	wire	wire_l3_w2_n0_mux_dataout;
	wire	wire_l3_w2_n1_mux_dataout;
	wire	wire_l3_w3_n0_mux_dataout;
	wire	wire_l3_w3_n1_mux_dataout;
	wire	wire_l3_w4_n0_mux_dataout;
	wire	wire_l3_w4_n1_mux_dataout;
	wire	wire_l3_w5_n0_mux_dataout;
	wire	wire_l3_w5_n1_mux_dataout;
	wire	wire_l3_w6_n0_mux_dataout;
	wire	wire_l3_w6_n1_mux_dataout;
	wire	wire_l3_w7_n0_mux_dataout;
	wire	wire_l3_w7_n1_mux_dataout;
	wire	wire_l4_w0_n0_mux_dataout;
	wire	wire_l4_w1_n0_mux_dataout;
	wire	wire_l4_w2_n0_mux_dataout;
	wire	wire_l4_w3_n0_mux_dataout;
	wire	wire_l4_w4_n0_mux_dataout;
	wire	wire_l4_w5_n0_mux_dataout;
	wire	wire_l4_w6_n0_mux_dataout;
	wire	wire_l4_w7_n0_mux_dataout;
	wire  [239:0]  data_wire;
	wire  [7:0]  result_wire_ext;
	wire  [15:0]  sel_wire;

	assign		wire_l1_w0_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[8] : data_wire[0];
	assign		wire_l1_w0_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[24] : data_wire[16];
	assign		wire_l1_w0_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[40] : data_wire[32];
	assign		wire_l1_w0_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[56] : data_wire[48];
	assign		wire_l1_w0_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[72] : data_wire[64];
	assign		wire_l1_w0_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[88] : data_wire[80];
	assign		wire_l1_w0_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[104] : data_wire[96];
	assign		wire_l1_w0_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[120] : data_wire[112];
	assign		wire_l1_w1_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[9] : data_wire[1];
	assign		wire_l1_w1_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[25] : data_wire[17];
	assign		wire_l1_w1_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[41] : data_wire[33];
	assign		wire_l1_w1_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[57] : data_wire[49];
	assign		wire_l1_w1_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[73] : data_wire[65];
	assign		wire_l1_w1_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[89] : data_wire[81];
	assign		wire_l1_w1_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[105] : data_wire[97];
	assign		wire_l1_w1_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[121] : data_wire[113];
	assign		wire_l1_w2_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[10] : data_wire[2];
	assign		wire_l1_w2_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[26] : data_wire[18];
	assign		wire_l1_w2_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[42] : data_wire[34];
	assign		wire_l1_w2_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[58] : data_wire[50];
	assign		wire_l1_w2_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[74] : data_wire[66];
	assign		wire_l1_w2_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[90] : data_wire[82];
	assign		wire_l1_w2_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[106] : data_wire[98];
	assign		wire_l1_w2_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[122] : data_wire[114];
	assign		wire_l1_w3_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[11] : data_wire[3];
	assign		wire_l1_w3_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[27] : data_wire[19];
	assign		wire_l1_w3_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[43] : data_wire[35];
	assign		wire_l1_w3_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[59] : data_wire[51];
	assign		wire_l1_w3_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[75] : data_wire[67];
	assign		wire_l1_w3_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[91] : data_wire[83];
	assign		wire_l1_w3_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[107] : data_wire[99];
	assign		wire_l1_w3_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[123] : data_wire[115];
	assign		wire_l1_w4_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[12] : data_wire[4];
	assign		wire_l1_w4_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[28] : data_wire[20];
	assign		wire_l1_w4_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[44] : data_wire[36];
	assign		wire_l1_w4_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[60] : data_wire[52];
	assign		wire_l1_w4_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[76] : data_wire[68];
	assign		wire_l1_w4_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[92] : data_wire[84];
	assign		wire_l1_w4_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[108] : data_wire[100];
	assign		wire_l1_w4_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[124] : data_wire[116];
	assign		wire_l1_w5_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[13] : data_wire[5];
	assign		wire_l1_w5_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[29] : data_wire[21];
	assign		wire_l1_w5_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[45] : data_wire[37];
	assign		wire_l1_w5_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[61] : data_wire[53];
	assign		wire_l1_w5_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[77] : data_wire[69];
	assign		wire_l1_w5_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[93] : data_wire[85];
	assign		wire_l1_w5_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[109] : data_wire[101];
	assign		wire_l1_w5_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[125] : data_wire[117];
	assign		wire_l1_w6_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[14] : data_wire[6];
	assign		wire_l1_w6_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[30] : data_wire[22];
	assign		wire_l1_w6_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[46] : data_wire[38];
	assign		wire_l1_w6_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[62] : data_wire[54];
	assign		wire_l1_w6_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[78] : data_wire[70];
	assign		wire_l1_w6_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[94] : data_wire[86];
	assign		wire_l1_w6_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[110] : data_wire[102];
	assign		wire_l1_w6_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[126] : data_wire[118];
	assign		wire_l1_w7_n0_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[15] : data_wire[7];
	assign		wire_l1_w7_n1_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[31] : data_wire[23];
	assign		wire_l1_w7_n2_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[47] : data_wire[39];
	assign		wire_l1_w7_n3_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[63] : data_wire[55];
	assign		wire_l1_w7_n4_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[79] : data_wire[71];
	assign		wire_l1_w7_n5_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[95] : data_wire[87];
	assign		wire_l1_w7_n6_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[111] : data_wire[103];
	assign		wire_l1_w7_n7_mux_dataout = (sel_wire[0] === 1'b1) ? data_wire[127] : data_wire[119];
	assign		wire_l2_w0_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[129] : data_wire[128];
	assign		wire_l2_w0_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[131] : data_wire[130];
	assign		wire_l2_w0_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[133] : data_wire[132];
	assign		wire_l2_w0_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[135] : data_wire[134];
	assign		wire_l2_w1_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[137] : data_wire[136];
	assign		wire_l2_w1_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[139] : data_wire[138];
	assign		wire_l2_w1_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[141] : data_wire[140];
	assign		wire_l2_w1_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[143] : data_wire[142];
	assign		wire_l2_w2_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[145] : data_wire[144];
	assign		wire_l2_w2_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[147] : data_wire[146];
	assign		wire_l2_w2_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[149] : data_wire[148];
	assign		wire_l2_w2_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[151] : data_wire[150];
	assign		wire_l2_w3_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[153] : data_wire[152];
	assign		wire_l2_w3_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[155] : data_wire[154];
	assign		wire_l2_w3_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[157] : data_wire[156];
	assign		wire_l2_w3_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[159] : data_wire[158];
	assign		wire_l2_w4_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[161] : data_wire[160];
	assign		wire_l2_w4_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[163] : data_wire[162];
	assign		wire_l2_w4_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[165] : data_wire[164];
	assign		wire_l2_w4_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[167] : data_wire[166];
	assign		wire_l2_w5_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[169] : data_wire[168];
	assign		wire_l2_w5_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[171] : data_wire[170];
	assign		wire_l2_w5_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[173] : data_wire[172];
	assign		wire_l2_w5_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[175] : data_wire[174];
	assign		wire_l2_w6_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[177] : data_wire[176];
	assign		wire_l2_w6_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[179] : data_wire[178];
	assign		wire_l2_w6_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[181] : data_wire[180];
	assign		wire_l2_w6_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[183] : data_wire[182];
	assign		wire_l2_w7_n0_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[185] : data_wire[184];
	assign		wire_l2_w7_n1_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[187] : data_wire[186];
	assign		wire_l2_w7_n2_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[189] : data_wire[188];
	assign		wire_l2_w7_n3_mux_dataout = (sel_wire[5] === 1'b1) ? data_wire[191] : data_wire[190];
	assign		wire_l3_w0_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[193] : data_wire[192];
	assign		wire_l3_w0_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[195] : data_wire[194];
	assign		wire_l3_w1_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[197] : data_wire[196];
	assign		wire_l3_w1_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[199] : data_wire[198];
	assign		wire_l3_w2_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[201] : data_wire[200];
	assign		wire_l3_w2_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[203] : data_wire[202];
	assign		wire_l3_w3_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[205] : data_wire[204];
	assign		wire_l3_w3_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[207] : data_wire[206];
	assign		wire_l3_w4_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[209] : data_wire[208];
	assign		wire_l3_w4_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[211] : data_wire[210];
	assign		wire_l3_w5_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[213] : data_wire[212];
	assign		wire_l3_w5_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[215] : data_wire[214];
	assign		wire_l3_w6_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[217] : data_wire[216];
	assign		wire_l3_w6_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[219] : data_wire[218];
	assign		wire_l3_w7_n0_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[221] : data_wire[220];
	assign		wire_l3_w7_n1_mux_dataout = (sel_wire[10] === 1'b1) ? data_wire[223] : data_wire[222];
	assign		wire_l4_w0_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[225] : data_wire[224];
	assign		wire_l4_w1_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[227] : data_wire[226];
	assign		wire_l4_w2_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[229] : data_wire[228];
	assign		wire_l4_w3_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[231] : data_wire[230];
	assign		wire_l4_w4_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[233] : data_wire[232];
	assign		wire_l4_w5_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[235] : data_wire[234];
	assign		wire_l4_w6_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[237] : data_wire[236];
	assign		wire_l4_w7_n0_mux_dataout = (sel_wire[15] === 1'b1) ? data_wire[239] : data_wire[238];
	assign
		data_wire = {wire_l3_w7_n1_mux_dataout, wire_l3_w7_n0_mux_dataout, wire_l3_w6_n1_mux_dataout, wire_l3_w6_n0_mux_dataout, wire_l3_w5_n1_mux_dataout, wire_l3_w5_n0_mux_dataout, wire_l3_w4_n1_mux_dataout, wire_l3_w4_n0_mux_dataout, wire_l3_w3_n1_mux_dataout, wire_l3_w3_n0_mux_dataout, wire_l3_w2_n1_mux_dataout, wire_l3_w2_n0_mux_dataout, wire_l3_w1_n1_mux_dataout, wire_l3_w1_n0_mux_dataout, wire_l3_w0_n1_mux_dataout, wire_l3_w0_n0_mux_dataout, wire_l2_w7_n3_mux_dataout, wire_l2_w7_n2_mux_dataout, wire_l2_w7_n1_mux_dataout, wire_l2_w7_n0_mux_dataout, wire_l2_w6_n3_mux_dataout, wire_l2_w6_n2_mux_dataout, wire_l2_w6_n1_mux_dataout, wire_l2_w6_n0_mux_dataout, wire_l2_w5_n3_mux_dataout, wire_l2_w5_n2_mux_dataout, wire_l2_w5_n1_mux_dataout, wire_l2_w5_n0_mux_dataout, wire_l2_w4_n3_mux_dataout, wire_l2_w4_n2_mux_dataout, wire_l2_w4_n1_mux_dataout, wire_l2_w4_n0_mux_dataout, wire_l2_w3_n3_mux_dataout, wire_l2_w3_n2_mux_dataout, wire_l2_w3_n1_mux_dataout, wire_l2_w3_n0_mux_dataout, wire_l2_w2_n3_mux_dataout, wire_l2_w2_n2_mux_dataout, wire_l2_w2_n1_mux_dataout, wire_l2_w2_n0_mux_dataout, wire_l2_w1_n3_mux_dataout, wire_l2_w1_n2_mux_dataout, wire_l2_w1_n1_mux_dataout, wire_l2_w1_n0_mux_dataout, wire_l2_w0_n3_mux_dataout, wire_l2_w0_n2_mux_dataout, wire_l2_w0_n1_mux_dataout, wire_l2_w0_n0_mux_dataout, wire_l1_w7_n7_mux_dataout, wire_l1_w7_n6_mux_dataout, wire_l1_w7_n5_mux_dataout, wire_l1_w7_n4_mux_dataout, wire_l1_w7_n3_mux_dataout, wire_l1_w7_n2_mux_dataout, wire_l1_w7_n1_mux_dataout, wire_l1_w7_n0_mux_dataout, wire_l1_w6_n7_mux_dataout, wire_l1_w6_n6_mux_dataout, wire_l1_w6_n5_mux_dataout, wire_l1_w6_n4_mux_dataout, wire_l1_w6_n3_mux_dataout, wire_l1_w6_n2_mux_dataout, wire_l1_w6_n1_mux_dataout, wire_l1_w6_n0_mux_dataout, wire_l1_w5_n7_mux_dataout, wire_l1_w5_n6_mux_dataout, wire_l1_w5_n5_mux_dataout, wire_l1_w5_n4_mux_dataout, wire_l1_w5_n3_mux_dataout, wire_l1_w5_n2_mux_dataout, wire_l1_w5_n1_mux_dataout, wire_l1_w5_n0_mux_dataout, wire_l1_w4_n7_mux_dataout, wire_l1_w4_n6_mux_dataout, wire_l1_w4_n5_mux_dataout, wire_l1_w4_n4_mux_dataout
, wire_l1_w4_n3_mux_dataout, wire_l1_w4_n2_mux_dataout, wire_l1_w4_n1_mux_dataout, wire_l1_w4_n0_mux_dataout, wire_l1_w3_n7_mux_dataout, wire_l1_w3_n6_mux_dataout, wire_l1_w3_n5_mux_dataout, wire_l1_w3_n4_mux_dataout, wire_l1_w3_n3_mux_dataout, wire_l1_w3_n2_mux_dataout, wire_l1_w3_n1_mux_dataout, wire_l1_w3_n0_mux_dataout, wire_l1_w2_n7_mux_dataout, wire_l1_w2_n6_mux_dataout, wire_l1_w2_n5_mux_dataout, wire_l1_w2_n4_mux_dataout, wire_l1_w2_n3_mux_dataout, wire_l1_w2_n2_mux_dataout, wire_l1_w2_n1_mux_dataout, wire_l1_w2_n0_mux_dataout, wire_l1_w1_n7_mux_dataout, wire_l1_w1_n6_mux_dataout, wire_l1_w1_n5_mux_dataout, wire_l1_w1_n4_mux_dataout, wire_l1_w1_n3_mux_dataout, wire_l1_w1_n2_mux_dataout, wire_l1_w1_n1_mux_dataout, wire_l1_w1_n0_mux_dataout, wire_l1_w0_n7_mux_dataout, wire_l1_w0_n6_mux_dataout, wire_l1_w0_n5_mux_dataout, wire_l1_w0_n4_mux_dataout, wire_l1_w0_n3_mux_dataout, wire_l1_w0_n2_mux_dataout, wire_l1_w0_n1_mux_dataout, wire_l1_w0_n0_mux_dataout, data},
		result = result_wire_ext,
		result_wire_ext = {wire_l4_w7_n0_mux_dataout, wire_l4_w6_n0_mux_dataout, wire_l4_w5_n0_mux_dataout, wire_l4_w4_n0_mux_dataout, wire_l4_w3_n0_mux_dataout, wire_l4_w2_n0_mux_dataout, wire_l4_w1_n0_mux_dataout, wire_l4_w0_n0_mux_dataout},
		sel_wire = {sel[3], {4{1'b0}}, sel[2], {4{1'b0}}, sel[1], {4{1'b0}}, sel[0]};
endmodule //lpm_mux0_mux
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module lpm_mux0 (
	data0x,
	data10x,
	data11x,
	data12x,
	data13x,
	data14x,
	data15x,
	data1x,
	data2x,
	data3x,
	data4x,
	data5x,
	data6x,
	data7x,
	data8x,
	data9x,
	sel,
	result)/* synthesis synthesis_clearbox = 1 */;

	input	[7:0]  data0x;
	input	[7:0]  data10x;
	input	[7:0]  data11x;
	input	[7:0]  data12x;
	input	[7:0]  data13x;
	input	[7:0]  data14x;
	input	[7:0]  data15x;
	input	[7:0]  data1x;
	input	[7:0]  data2x;
	input	[7:0]  data3x;
	input	[7:0]  data4x;
	input	[7:0]  data5x;
	input	[7:0]  data6x;
	input	[7:0]  data7x;
	input	[7:0]  data8x;
	input	[7:0]  data9x;
	input	[3:0]  sel;
	output	[7:0]  result;

	wire [7:0] sub_wire0;
	wire [7:0] sub_wire17 = data0x[7:0];
	wire [7:0] sub_wire16 = data1x[7:0];
	wire [7:0] sub_wire15 = data2x[7:0];
	wire [7:0] sub_wire14 = data3x[7:0];
	wire [7:0] sub_wire13 = data4x[7:0];
	wire [7:0] sub_wire12 = data5x[7:0];
	wire [7:0] sub_wire11 = data6x[7:0];
	wire [7:0] sub_wire10 = data7x[7:0];
	wire [7:0] sub_wire9 = data8x[7:0];
	wire [7:0] sub_wire8 = data9x[7:0];
	wire [7:0] sub_wire7 = data10x[7:0];
	wire [7:0] sub_wire6 = data11x[7:0];
	wire [7:0] sub_wire5 = data12x[7:0];
	wire [7:0] sub_wire4 = data13x[7:0];
	wire [7:0] sub_wire3 = data14x[7:0];
	wire [7:0] result = sub_wire0[7:0];
	wire [7:0] sub_wire1 = data15x[7:0];
	wire [127:0] sub_wire2 = {sub_wire17, sub_wire16, sub_wire15, sub_wire14, sub_wire13, sub_wire12, sub_wire11, sub_wire10, sub_wire9, sub_wire8, sub_wire7, sub_wire6, sub_wire5, sub_wire4, sub_wire3, sub_wire1};

	lpm_mux0_mux	lpm_mux0_mux_component (
				.sel (sel),
				.data (sub_wire2),
				.result (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Stratix II"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: CONSTANT: LPM_SIZE NUMERIC "16"
// Retrieval info: CONSTANT: LPM_TYPE STRING "LPM_MUX"
// Retrieval info: CONSTANT: LPM_WIDTH NUMERIC "8"
// Retrieval info: CONSTANT: LPM_WIDTHS NUMERIC "4"
// Retrieval info: USED_PORT: data0x 0 0 8 0 INPUT NODEFVAL data0x[7..0]
// Retrieval info: USED_PORT: data10x 0 0 8 0 INPUT NODEFVAL data10x[7..0]
// Retrieval info: USED_PORT: data11x 0 0 8 0 INPUT NODEFVAL data11x[7..0]
// Retrieval info: USED_PORT: data12x 0 0 8 0 INPUT NODEFVAL data12x[7..0]
// Retrieval info: USED_PORT: data13x 0 0 8 0 INPUT NODEFVAL data13x[7..0]
// Retrieval info: USED_PORT: data14x 0 0 8 0 INPUT NODEFVAL data14x[7..0]
// Retrieval info: USED_PORT: data15x 0 0 8 0 INPUT NODEFVAL data15x[7..0]
// Retrieval info: USED_PORT: data1x 0 0 8 0 INPUT NODEFVAL data1x[7..0]
// Retrieval info: USED_PORT: data2x 0 0 8 0 INPUT NODEFVAL data2x[7..0]
// Retrieval info: USED_PORT: data3x 0 0 8 0 INPUT NODEFVAL data3x[7..0]
// Retrieval info: USED_PORT: data4x 0 0 8 0 INPUT NODEFVAL data4x[7..0]
// Retrieval info: USED_PORT: data5x 0 0 8 0 INPUT NODEFVAL data5x[7..0]
// Retrieval info: USED_PORT: data6x 0 0 8 0 INPUT NODEFVAL data6x[7..0]
// Retrieval info: USED_PORT: data7x 0 0 8 0 INPUT NODEFVAL data7x[7..0]
// Retrieval info: USED_PORT: data8x 0 0 8 0 INPUT NODEFVAL data8x[7..0]
// Retrieval info: USED_PORT: data9x 0 0 8 0 INPUT NODEFVAL data9x[7..0]
// Retrieval info: USED_PORT: result 0 0 8 0 OUTPUT NODEFVAL result[7..0]
// Retrieval info: USED_PORT: sel 0 0 4 0 INPUT NODEFVAL sel[3..0]
// Retrieval info: CONNECT: result 0 0 8 0 @result 0 0 8 0
// Retrieval info: CONNECT: @data 1 15 8 0 data15x 0 0 8 0
// Retrieval info: CONNECT: @data 1 14 8 0 data14x 0 0 8 0
// Retrieval info: CONNECT: @data 1 13 8 0 data13x 0 0 8 0
// Retrieval info: CONNECT: @data 1 12 8 0 data12x 0 0 8 0
// Retrieval info: CONNECT: @data 1 11 8 0 data11x 0 0 8 0
// Retrieval info: CONNECT: @data 1 10 8 0 data10x 0 0 8 0
// Retrieval info: CONNECT: @data 1 9 8 0 data9x 0 0 8 0
// Retrieval info: CONNECT: @data 1 8 8 0 data8x 0 0 8 0
// Retrieval info: CONNECT: @data 1 7 8 0 data7x 0 0 8 0
// Retrieval info: CONNECT: @data 1 6 8 0 data6x 0 0 8 0
// Retrieval info: CONNECT: @data 1 5 8 0 data5x 0 0 8 0
// Retrieval info: CONNECT: @data 1 4 8 0 data4x 0 0 8 0
// Retrieval info: CONNECT: @data 1 3 8 0 data3x 0 0 8 0
// Retrieval info: CONNECT: @data 1 2 8 0 data2x 0 0 8 0
// Retrieval info: CONNECT: @data 1 1 8 0 data1x 0 0 8 0
// Retrieval info: CONNECT: @data 1 0 8 0 data0x 0 0 8 0
// Retrieval info: CONNECT: @sel 0 0 4 0 sel 0 0 4 0
// Retrieval info: LIBRARY: lpm lpm.lpm_components.all
// Retrieval info: GEN_FILE: TYPE_NORMAL lpm_mux0.tdf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL lpm_mux0.inc TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL lpm_mux0.cmp TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL lpm_mux0.bsf TRUE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL lpm_mux0_inst.tdf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL lpm_mux0_syn.v TRUE
// Retrieval info: LIB_FILE: lpm
