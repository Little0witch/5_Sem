Simulator report for lab02
Sat Jan 13 16:08:18 2024
Quartus II Version 9.1 Build 222 10/21/2009 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 10.0 us      ;
; Simulation Netlist Size     ; 106 nodes    ;
; Simulation Coverage         ;      66.38 % ;
; Total Number of Transitions ; 7117         ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Stratix II   ;
+-----------------------------+--------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                      ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Option                                                                                     ; Setting    ; Default Value ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Simulation mode                                                                            ; Functional ; Timing        ;
; Start time                                                                                 ; 0 ns       ; 0 ns          ;
; End time                                                                                   ; 10 us      ;               ;
; Simulation results format                                                                  ; CVWF       ;               ;
; Add pins automatically to simulation output waveforms                                      ; On         ; On            ;
; Check outputs                                                                              ; Off        ; Off           ;
; Report simulation coverage                                                                 ; On         ; On            ;
; Display complete 1/0 value coverage report                                                 ; On         ; On            ;
; Display missing 1-value coverage report                                                    ; On         ; On            ;
; Display missing 0-value coverage report                                                    ; On         ; On            ;
; Detect setup and hold time violations                                                      ; Off        ; Off           ;
; Detect glitches                                                                            ; Off        ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off        ; Off           ;
; Generate Signal Activity File                                                              ; Off        ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off        ; Off           ;
; Group bus channels in simulation results                                                   ; Off        ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On         ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off        ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off        ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto       ; Auto          ;
+--------------------------------------------------------------------------------------------+------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      66.38 % ;
; Total nodes checked                                 ; 106          ;
; Total output ports checked                          ; 116          ;
; Total output ports with complete 1/0-value coverage ; 77           ;
; Total output ports with no 1/0-value coverage       ; 36           ;
; Total output ports with no 1-value coverage         ; 38           ;
; Total output ports with no 0-value coverage         ; 37           ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                                                                                                                                         ;
+-----------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                             ; Output Port Name                                                                                                         ; Output Port Type ;
+-----------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------+------------------+
; |lab02|clk_in                                                                                                         ; |lab02|clk_in                                                                                                            ; pin_out          ;
; |lab02|clk                                                                                                            ; |lab02|clk                                                                                                               ; out              ;
; |lab02|clk_D                                                                                                          ; |lab02|clk_D                                                                                                             ; pin_out          ;
; |lab02|DATA[7]                                                                                                        ; |lab02|DATA[7]                                                                                                           ; pin_out          ;
; |lab02|DATA[5]                                                                                                        ; |lab02|DATA[5]                                                                                                           ; pin_out          ;
; |lab02|DATA[4]                                                                                                        ; |lab02|DATA[4]                                                                                                           ; pin_out          ;
; |lab02|DATA[3]                                                                                                        ; |lab02|DATA[3]                                                                                                           ; pin_out          ;
; |lab02|DATA[2]                                                                                                        ; |lab02|DATA[2]                                                                                                           ; pin_out          ;
; |lab02|DATA[1]                                                                                                        ; |lab02|DATA[1]                                                                                                           ; pin_out          ;
; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita0    ; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita0       ; sumout           ;
; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita0    ; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita0~COUT  ; cout             ;
; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita1    ; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita1       ; sumout           ;
; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita1    ; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita1~COUT  ; cout             ;
; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita2    ; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita2       ; sumout           ;
; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita2    ; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita2~COUT  ; cout             ;
; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita3    ; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_comb_bita3       ; sumout           ;
; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_reg_bit1a[1]  ; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|safe_q[1]                ; regout           ;
; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_reg_bit1a[0]  ; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|safe_q[0]                ; regout           ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode21w[3]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode21w[3]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode21w[2]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode21w[2]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode21w[1]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode21w[1]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode31w[3]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode31w[3]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode31w[2]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode31w[2]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode31w[1]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode31w[1]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode41w[3]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode41w[3]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode41w[2]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode41w[2]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode41w[1]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode41w[1]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode4w[2]          ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode4w[2]             ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode4w[1]          ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode4w[1]             ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode51w[3]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode51w[3]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode51w[2]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode51w[2]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode51w[1]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode51w[1]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode61w[3]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode61w[3]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode61w[2]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode61w[2]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode61w[1]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode61w[1]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[2]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[2]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[1]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[1]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode81w[3]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode81w[3]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode81w[2]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode81w[2]            ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode81w[1]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode81w[1]            ; out0             ;
; |lab02|BlockB:inst1|inst5                                                                                             ; |lab02|BlockB:inst1|inst5                                                                                                ; regout           ;
; |lab02|BlockB:inst1|inst5~0                                                                                           ; |lab02|BlockB:inst1|inst5~0                                                                                              ; out0             ;
; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita0   ; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita0      ; sumout           ;
; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita0   ; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita0~COUT ; cout             ;
; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita1   ; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita1      ; sumout           ;
; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita1   ; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita1~COUT ; cout             ;
; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita2   ; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita2      ; sumout           ;
; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_reg_bit1a[2] ; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|safe_q[2]               ; regout           ;
; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_reg_bit1a[1] ; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|safe_q[1]               ; regout           ;
; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_reg_bit1a[0] ; |lab02|BlockB:inst1|lpm_counter2:inst2|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|safe_q[0]               ; regout           ;
; |lab02|BlockB:inst1|lpm_compare2:inst3|lpm_compare:lpm_compare_component|cmpr_h8j:auto_generated|aneb_result_wire[0]  ; |lab02|BlockB:inst1|lpm_compare2:inst3|lpm_compare:lpm_compare_component|cmpr_h8j:auto_generated|aneb_result_wire[0]     ; out0             ;
; |lab02|BlockB:inst1|lpm_compare2:inst3|lpm_compare:lpm_compare_component|cmpr_h8j:auto_generated|data_wire[0]         ; |lab02|BlockB:inst1|lpm_compare2:inst3|lpm_compare:lpm_compare_component|cmpr_h8j:auto_generated|data_wire[0]            ; out0             ;
; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0    ; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0       ; sumout           ;
; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0    ; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0~COUT  ; cout             ;
; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1    ; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1       ; sumout           ;
; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1    ; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1~COUT  ; cout             ;
; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2    ; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2       ; sumout           ;
; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2    ; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2~COUT  ; cout             ;
; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita3    ; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita3       ; sumout           ;
; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[3]  ; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[3]                ; regout           ;
; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[2]  ; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[2]                ; regout           ;
; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[1]  ; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[1]                ; regout           ;
; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[0]  ; |lab02|BlockB:inst1|lpm_counter1:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[0]                ; regout           ;
; |lab02|BlockB:inst1|lpm_compare1:inst1|lpm_compare:lpm_compare_component|cmpr_i8j:auto_generated|aneb_result_wire[0]  ; |lab02|BlockB:inst1|lpm_compare1:inst1|lpm_compare:lpm_compare_component|cmpr_i8j:auto_generated|aneb_result_wire[0]     ; out0             ;
; |lab02|BlockB:inst1|lpm_compare1:inst1|lpm_compare:lpm_compare_component|cmpr_i8j:auto_generated|data_wire[1]         ; |lab02|BlockB:inst1|lpm_compare1:inst1|lpm_compare:lpm_compare_component|cmpr_i8j:auto_generated|data_wire[1]            ; out0             ;
; |lab02|BlockB:inst1|lpm_compare1:inst1|lpm_compare:lpm_compare_component|cmpr_i8j:auto_generated|data_wire[0]         ; |lab02|BlockB:inst1|lpm_compare1:inst1|lpm_compare:lpm_compare_component|cmpr_i8j:auto_generated|data_wire[0]            ; out0             ;
; |lab02|BlockA:inst|inst2                                                                                              ; |lab02|BlockA:inst|inst2                                                                                                 ; regout           ;
; |lab02|BlockA:inst|inst2~0                                                                                            ; |lab02|BlockA:inst|inst2~0                                                                                               ; out0             ;
; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita0     ; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita0        ; sumout           ;
; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita0     ; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita0~COUT   ; cout             ;
; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita1     ; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita1        ; sumout           ;
; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita1     ; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita1~COUT   ; cout             ;
; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita2     ; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita2        ; sumout           ;
; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_reg_bit1a[1]   ; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|safe_q[1]                 ; regout           ;
; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_reg_bit1a[0]   ; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|safe_q[0]                 ; regout           ;
; |lab02|BlockA:inst|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_h8j:auto_generated|aneb_result_wire[0]   ; |lab02|BlockA:inst|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_h8j:auto_generated|aneb_result_wire[0]      ; out0             ;
; |lab02|BlockA:inst|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_h8j:auto_generated|data_wire[0]          ; |lab02|BlockA:inst|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_h8j:auto_generated|data_wire[0]             ; out0             ;
+-----------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                                                                                                                                 ;
+----------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                            ; Output Port Name                                                                                               ; Output Port Type ;
+----------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+------------------+
; |lab02|DATA[15]                                                                                                      ; |lab02|DATA[15]                                                                                                ; pin_out          ;
; |lab02|DATA[14]                                                                                                      ; |lab02|DATA[14]                                                                                                ; pin_out          ;
; |lab02|DATA[13]                                                                                                      ; |lab02|DATA[13]                                                                                                ; pin_out          ;
; |lab02|DATA[12]                                                                                                      ; |lab02|DATA[12]                                                                                                ; pin_out          ;
; |lab02|DATA[11]                                                                                                      ; |lab02|DATA[11]                                                                                                ; pin_out          ;
; |lab02|DATA[10]                                                                                                      ; |lab02|DATA[10]                                                                                                ; pin_out          ;
; |lab02|DATA[9]                                                                                                       ; |lab02|DATA[9]                                                                                                 ; pin_out          ;
; |lab02|DATA[8]                                                                                                       ; |lab02|DATA[8]                                                                                                 ; pin_out          ;
; |lab02|DATA[6]                                                                                                       ; |lab02|DATA[6]                                                                                                 ; pin_out          ;
; |lab02|DATA[0]                                                                                                       ; |lab02|DATA[0]                                                                                                 ; pin_out          ;
; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_reg_bit1a[3] ; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|safe_q[3]      ; regout           ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode4w[3]         ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode4w[3]   ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[3]        ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[3]  ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[3]        ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[3]  ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[2]        ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[2]  ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[1]        ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[1]  ; out0             ;
; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_reg_bit1a[2]  ; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|safe_q[2]       ; regout           ;
+----------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                                                                                                                                                 ;
+----------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                            ; Output Port Name                                                                                               ; Output Port Type ;
+----------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+------------------+
; |lab02|DATA[15]                                                                                                      ; |lab02|DATA[15]                                                                                                ; pin_out          ;
; |lab02|DATA[14]                                                                                                      ; |lab02|DATA[14]                                                                                                ; pin_out          ;
; |lab02|DATA[13]                                                                                                      ; |lab02|DATA[13]                                                                                                ; pin_out          ;
; |lab02|DATA[12]                                                                                                      ; |lab02|DATA[12]                                                                                                ; pin_out          ;
; |lab02|DATA[11]                                                                                                      ; |lab02|DATA[11]                                                                                                ; pin_out          ;
; |lab02|DATA[10]                                                                                                      ; |lab02|DATA[10]                                                                                                ; pin_out          ;
; |lab02|DATA[9]                                                                                                       ; |lab02|DATA[9]                                                                                                 ; pin_out          ;
; |lab02|DATA[8]                                                                                                       ; |lab02|DATA[8]                                                                                                 ; pin_out          ;
; |lab02|DATA[6]                                                                                                       ; |lab02|DATA[6]                                                                                                 ; pin_out          ;
; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_reg_bit1a[3] ; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|safe_q[3]      ; regout           ;
; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|counter_reg_bit1a[2] ; |lab02|BlockC:inst3|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_qlh:auto_generated|safe_q[2]      ; regout           ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[3]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[3] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[2]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[2] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[1]       ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[1] ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[3]        ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[3]  ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[3]        ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[3]  ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[2]        ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[2]  ; out0             ;
; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[1]        ; |lab02|BlockC:inst3|lpm_decode0:inst1|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[1]  ; out0             ;
; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_reg_bit1a[2]  ; |lab02|BlockA:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|safe_q[2]       ; regout           ;
+----------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.1 Build 222 10/21/2009 SJ Web Edition
    Info: Processing started: Sat Jan 13 16:08:18 2024
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off lab02 -c lab02
Info: Using vector source file "C:/altera/91/labs/lab02/lab02.vwf"
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is      66.38 %
Info: Number of transitions in simulation is 7117
Info: Quartus II Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 155 megabytes
    Info: Processing ended: Sat Jan 13 16:08:18 2024
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


